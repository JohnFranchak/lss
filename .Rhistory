scale_y_continuous(breaks = c(0,10,20,30,40), limits = c(0,40))
ggsave("figures/lss1_position_sd.pdf", units = "in", width = 4, height = 4)
dsl <-  gather(ds, key = "cond", value = "speed", "walk_eyex_speed","search_eyex_speed","walk_eyey_speed","search_eyey_speed")
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"),levels = c("walk","search"),labels = c("Walk","Search"))
shapiro_test(ds$walk_eyex_speed - ds$search_eyex_speed)
dsl %>% filter(dim == "x") %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% filter(dim == "x") %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% filter(dim == "x") %>% cohens_d(speed ~ task, paired = TRUE)
dsl %>% group_by(dim, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), se = sd(speed, na.rm = T)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot() +
labs(x = "", y = "Speed (ยบ/s)") +
geom_sina(data = filter(dsl, dim == "x"), aes(y = speed, x = task, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3) +
geom_errorbar(aes(x = task, group = task,ymin = ymin, ymax = ymax), size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
scale_y_continuous(breaks = 0:5, limits = c(0,5))
ggsave("figures/lss1_speed.pdf", units = "in", width = 4, height = 4)
ds %>% gather(key = "task", value = "speed", "walk_path_speed", "search_path_speed") %>%
mutate(task = factor(task, levels = c("walk_path_speed", "search_path_speed"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
dsl %>%  group_by(task) %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), se = sd(speed, na.rm = T)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot() +
geom_sina(data = dsl, aes(y = speed, x = task, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3, na.rm = T) +
geom_errorbar(aes(x = task, ymin = ymin, ymax = ymax), color = "black", size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
labs(x = "", y = "Walking speed (m/s)") +
scale_y_continuous(breaks = c(.25, .5, .75, 1, 1.25, 1.5), limits = c(.25, 1.5)) +
theme(legend.position = "none") -> p1
#ggsave("figures/lss1_walking_speed.pdf", units = "in", width = 5, height = 4)
#SPEED SD BY TASK
cor.test(ds$walk_path_speed_sd, ds$search_path_speed_sd)
ds %>% gather(key = "task", value = "speed", "walk_path_speed_sd", "search_path_speed_sd") %>%
mutate(task = factor(task, levels = c("walk_path_speed_sd", "search_path_speed_sd"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
dsl %>%  group_by(task) %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), se = sd(speed, na.rm = T)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot() +
geom_sina(data = dsl, aes(y = speed, x = task, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3, na.rm = T) +
geom_errorbar(aes(x = task, ymin = ymin, ymax = ymax), color = "black", size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
labs(x = "", y = "Walking speed SD (m/s)") +
scale_y_continuous(breaks = c(0, .25, .5, .75, 1), limits = c(0,1)) +
theme(legend.position = "none") -> p2
#ggsave("figures/lss1_walking_speed_sd.pdf", units = "in", width = 5, height = 4)
#STRAIGHTNESS BY TASK
cor.test(ds$walk_straightness, ds$search_straightness)
ds %>% gather(key = "task", value = "speed", "walk_straightness", "search_straightness") %>%
mutate(task = factor(task, levels = c("walk_straightness", "search_straightness"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
dsl %>%  group_by(task) %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), se = sd(speed, na.rm = T)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot() +
geom_sina(data = dsl, aes(y = speed, x = task, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3, na.rm = T) +
geom_errorbar(aes(x = task, ymin = ymin, ymax = ymax), color = "black", size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
labs(x = "", y = "Straightness ratio") +
scale_y_continuous(breaks = c(0, 2.5, 5, 7.5), limits = c(0,7.5)) +
theme(legend.position = "none") -> p3
#ggsave("figures/lss1_walking_straightness.pdf", units = "in", width = 5, height = 4)
p1 + p2 + p3
ggsave("figures/lss1_walking_stats_composite.pdf", units = "in", width = 9, height = 4)
pkgs <- c("multcomp", "emmeans", "tidyverse", "effects", "lme4", "lmerTest", "psych","ggforce","patchwork", "rstatix")
#lapply(pkgs[!(pkgs %in% installed.packages())], install.packages)
lapply(pkgs, library, character.only = TRUE)
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73","#F0E442", "#0072B2", "#D55E00", "#CC79A7")
theme_update(text = element_text(size = 18),
axis.text.x = element_text(size = 18, color = "black"), axis.title.x = element_text(size = 21, margin = margin(t = 0, r = 0, b = 10, l = 0)),
axis.text.y = element_text(size = 18,  color = "black"), axis.title.y = element_text(size = 21, margin = margin(t = 0, r = 10, b = 0, l = 0)),
panel.background = element_blank(),panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "white"),
axis.ticks.length = unit(.25, "cm"), axis.ticks = element_line(size = 1, lineend = "round"),
legend.key = element_rect(fill = "white"))
# CREATE DATA SET ---------------------------------------------------------------
ds <- read_csv("summary_stats_mot_corrected.csv", na = "NaN")
ds <- mutate(ds, id = factor(id))
ds <- filter(ds, id != 212 & id != 203)
ds[ds["id"] == 229, "walk_posy_speed"] <- NA
# POSITION SD MEANS --------------
dsl <-  gather(ds, key = "cond", value = "std", "walk_posx_std","search_posx_std","walk_posy_std","search_posy_std","walk_eyex_std","search_eyex_std","walk_eyey_std","search_eyey_std")
dsl$eyehead <- factor(ifelse(is.na(str_extract(dsl$cond,"eye")),"head","eye"), levels = c("eye","head"),labels = c("Eyes","Head"))
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"), levels = c("walk","search"),labels = c("Walk","Search"))
dsl %>% split(.$dim) %>%
map(~ lmer(std ~ eyehead*task + (1|id),data = .)) -> res
res %>% map(anova)
res %>% map(~ emmeans(.,pairwise~eyehead|task, adjust = "Holm"))
res %>% map(~ emmeans(.,pairwise~task|eyehead, adjust = "Holm"))
#Descriptives
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(spread = mean(std, na.rm = T), n = n(), SD = sd(std, na.rm = T))
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(stdev = mean(std, na.rm = T), n = n(), se = sd(std, na.rm = T)/sqrt(n), ymin = stdev - se, ymax = stdev + se) %>%
ggplot() +
labs(x = "", y = "Position SD (ยบ)") +
geom_sina(data = filter(dsl, dim == "x"), aes(y = std, x = eyehead, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3) +
geom_errorbar(aes(x = eyehead, group = task,ymin = ymin, ymax = ymax), size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
scale_y_continuous(breaks = c(0,10,20,30,40), limits = c(0,40))
ggsave("figures/lss2_position_sd.pdf", units = "in", width = 4, height = 4)
#NO OUTLIERS
dsl %>% group_by(dim, eyehead, task) %>%
summarise(ym = mean(std, na.rm = T), lower = ym - 3*sd(std, na.rm = T), upper = ym + 3*sd(std, na.rm = T), ymin = min(std, na.rm =T), ymax = max(std, na.rm = T), x = 1) %>%
ggplot(aes(x = interaction(dim, task, eyehead))) + geom_boxplot(aes(ymin = ymin, lower = lower, middle = ym, upper = upper, ymax = ymax), stat = "identity") +
geom_point(data = dsl, aes(y = std, group = interaction(dim, task, eyehead)), na.rm = T)
#POSITION MEANS WITH TOTAL GAZE INCLUDED --------
dsl <-  gather(ds, key = "cond", value = "std", "walk_posx_std","search_posx_std","walk_eyex_std","search_eyex_std","walk_gazex_std","search_gazex_std")
dsl$eye <- factor(ifelse(is.na(str_extract(dsl$cond,"eye")),"","Eye"))
dsl$head <- factor(ifelse(is.na(str_extract(dsl$cond,"pos")),"","Head"))
dsl$total <- factor(ifelse(is.na(str_extract(dsl$cond,"gaze")),"","Gaze"))
dsl$eyehead <- factor(str_c(dsl$eye,dsl$head,dsl$total,sep = ""))
dsl$eyehead <- factor(dsl$eyehead, levels = c("Eye", "Head","Gaze"))
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"), levels = c("walk","search"),labels = c("Walk","Search"))
dsl %>% group_by(eyehead, task) %>%
summarise(stdev = mean(std, na.rm = T), n = n(), se = sd(std, na.rm = T)/sqrt(n), ymin = stdev - se, ymax = stdev + se) %>%
ggplot() +
labs(x = "", y = "Position SD (ยบ)") +
geom_sina(data = filter(dsl), aes(y = std, x = eyehead, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3) +
geom_errorbar(aes(x = eyehead, group = task,ymin = ymin, ymax = ymax), size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
scale_y_continuous(breaks = c(0,10,20,30,40), limits = c(0,40))
ggsave("figures/lss2_position_sd.pdf", units = "in", width = 5, height = 4)
# SPEED MEANS --------------
dsl <-  gather(ds, key = "cond", value = "speed", "walk_posx_speed","search_posx_speed","walk_posy_speed","search_posy_speed","walk_eyex_speed","search_eyex_speed","walk_eyey_speed","search_eyey_speed")
dsl$eyehead <- factor(ifelse(is.na(str_extract(dsl$cond,"eye")),"head","eye"), levels = c("eye","head"),labels = c("Eyes","Head"))
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"),levels = c("walk","search"),labels = c("Walk","Search"))
dsl %>% split(.$dim) %>%
map(~ lmer(speed ~ eyehead*task + (1|id),data = .)) -> res
res %>% map(anova)
res %>% map(~ emmeans(.,pairwise~eyehead|task, adjust = "Holm"))
res %>% map(~ emmeans(.,pairwise~task|eyehead, adjust = "Holm"))
#Descriptives
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), STD = sd(speed, na.rm = T))
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), se = sd(speed, na.rm = T)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot() +
labs(x = "", y = "Speed (ยบ/s)") +
geom_sina(data = filter(dsl, dim == "x"), aes(y = speed, x = eyehead, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3) +
geom_errorbar(aes(x = eyehead, group = task,ymin = ymin, ymax = ymax), size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
scale_y_continuous(breaks = 0:5, limits = c(0,5))
ggsave("figures/lss2_speed.pdf", units = "in", width = 4, height = 4)
#FIND OUTLIERS (Done, excluded at file read above)
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(ym = mean(speed, na.rm = T), lower = ym - 3*sd(speed, na.rm = T), upper = ym + 3*sd(speed, na.rm = T), ymin = min(speed, na.rm =T), ymax = max(speed, na.rm = T), x = 1) %>%
ggplot(aes(x = interaction(dim, task, eyehead))) + geom_boxplot(aes(ymin = ymin, lower = lower, middle = ym, upper = upper, ymax = ymax), stat = "identity") +
geom_point(data = filter(dsl, dim == "x"), aes(y = speed, group = interaction(dim, task, eyehead)))
# LONG FORMAT EYE-HEAD CORR --------------
dsl <-  gather(ds, key = "cond", value = "corr", "walk_eyexpos_corr","walk_eyeypos_corr","search_eyexpos_corr","search_eyeypos_corr")
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"),levels = c("walk","search"),labels = c("Walk","Search"))
t.test(ds$walk_eyexpos_corr,ds$search_eyexpos_corr, paired = T)
dsl %>% group_by(dim, task) %>% filter(dim == "x") %>%
summarise(stdev = mean(corr), n = n(), se = sd(corr)/sqrt(n), ymin = stdev - se, ymax = stdev + se) %>%
ggplot() +
geom_sina(data = filter(dsl, dim == "x"), aes(y = corr, x = task, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3) +
geom_errorbar(aes(x = task, ymin = ymin, ymax = ymax), color = "black", size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
labs(x = "", y = "Eye-head correlation (r)") +
scale_y_continuous(breaks = c(0,.25, .5, .75, 1), limits = c(0,1)) +
ggsave("figures/lss2_eye_head_corr.pdf", units = "in", width = 4, height = 4)
#BOXPLOT SHOWING 3SD RANGE
dsl %>% group_by(dim, task) %>%
summarise(ym = mean(corr), lower = ym - 3*sd(corr), upper = ym + 3*sd(corr), ymin = min(corr), ymax = max(corr), x = 1) %>%
ggplot(aes(x = interaction(dim, task))) + geom_boxplot(aes(ymin = ymin, lower = lower, middle = ym, upper = upper, ymax = ymax), stat = "identity") +
geom_point(data = dsl, aes(y = corr, group = interaction(dim, task)))
# LONG FORMAT POSITION TOTAL SD --------------
dsl <-  gather(ds, key = "cond", value = "std", "walk_gazex_std","walk_gazey_std","search_gazex_std","search_gazey_std")
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl <- filter(dsl, dsl$dim == "x")
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"),levels = c("walk","search"),labels = c("Walk","Search"))
dsl %>% group_by(task) %>% get_summary_stats(std, type = "mean_sd")
dsl %>% t_test(std ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(std ~ task, paired = TRUE)
# GPS DATA  --------------
#SPEED BY TASK
cor.test(ds$walk_path_speed, ds$search_path_speed)
ds %>% gather(key = "task", value = "speed", "walk_path_speed", "search_path_speed") %>%
mutate(task = factor(task, levels = c("walk_path_speed", "search_path_speed"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
dsl %>%  group_by(task) %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), se = sd(speed, na.rm = T)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot() +
geom_sina(data = dsl, aes(y = speed, x = task, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3, na.rm = T) +
geom_errorbar(aes(x = task, ymin = ymin, ymax = ymax), color = "black", size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
labs(x = "", y = "Walking speed (m/s)") +
scale_y_continuous(breaks = c(.25, .5, .75, 1, 1.25, 1.5), limits = c(.25, 1.5)) +
theme(legend.position = "none") -> p1
#ggsave("figures/lss2_walking_speed.pdf", units = "in", width = 5, height = 4)
#SPEED SD BY TASK
cor.test(ds$walk_path_speed_sd, ds$search_path_speed_sd)
ds %>% gather(key = "task", value = "speed", "walk_path_speed_sd", "search_path_speed_sd") %>%
mutate(task = factor(task, levels = c("walk_path_speed_sd", "search_path_speed_sd"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
dsl %>%  group_by(task) %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), se = sd(speed, na.rm = T)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot() +
geom_sina(data = dsl, aes(y = speed, x = task, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3, na.rm = T) +
geom_errorbar(aes(x = task, ymin = ymin, ymax = ymax), color = "black", size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
labs(x = "", y = "Walking speed SD (m/s)") +
scale_y_continuous(breaks = c(0, .25, .5, .75, 1), limits = c(0,1)) +
theme(legend.position = "none") -> p2
#ggsave("figures/lss2_walking_speed_sd.pdf", units = "in", width = 5, height = 4)
#STRAIGHTNESS BY TASK
cor.test(ds$walk_straightness, ds$search_straightness)
ds %>% gather(key = "task", value = "speed", "walk_straightness", "search_straightness") %>%
mutate(task = factor(task, levels = c("walk_straightness", "search_straightness"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
dsl %>%  group_by(task) %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), se = sd(speed, na.rm = T)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot() +
geom_sina(data = dsl, aes(y = speed, x = task, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3, na.rm = T) +
geom_errorbar(aes(x = task, ymin = ymin, ymax = ymax), color = "black", size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
labs(x = "", y = "Straightness ratio") +
scale_y_continuous(breaks = c(0, 2.5, 5, 7.5), limits = c(0,7.5)) +
theme(legend.position = "none") -> p3
#ggsave("figures/lss2_walking_straightness.pdf", units = "in", width = 5, height = 4)
p1 + p2 + p3
ggsave("figures/lss2_walking_stats_composite.pdf", units = "in", width = 9, height = 4)
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
library(tidyverse)
library(rstatix)
library(psych)
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(id))
ds <- filter(ds, id != 35) #Bad posttest eye tracking accuracy
View(ds)
library(tidyverse)
library(rstatix)
library(psych)
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(id))
ds <- filter(ds, id != 35) #Bad posttest eye tracking accuracy
ds <- mutate(ds, id = factor(Participant))
ds <- filter(ds, id != 35) #Bad posttest eye tracking accuracy
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
ds <- filter(ds, id != 35) #Bad posttest eye tracking accuracy
# POSITION SD MEANS --------------
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
View(dsl)
dsl  %>% group_by(phase) %>% get_summary_stats(std, type = "mean_sd")
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
View(dsl)
dsl  %>% t_test(std ~ task, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
dsl  %>% t_test(error ~ phase, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
View(dsl)
dsl$error
View(ds)
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
ds <- filter(ds, id != 35) #Bad posttest eye tracking accuracy
# POSITION SD MEANS --------------
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
dsl  %>% t_test(error ~ phase, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
dsl %>% group_by(phase, id)  %>%
summarise(stdev = mean(std, na.rm = T), n = n(), se = sd(std, na.rm = T)/sqrt(n), ymin = stdev - se, ymax = stdev + se) %>%
v
incl <- read_csv("summary_stats_LSS1.csv", na = "NaN")
incl$id
ds <- filter(ds, id %in% incl$id)
incl <- read_csv("summary_stats_LSS1.csv", na = "NaN")
incl <- filter(incl, id != 35) #Bad posttest eye tracking accuracy
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
ds <- filter(ds, id %in% incl$id)
View(incl)
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
ds <- filter(ds, id %in% incl$id)
mean(incl$id)
mean(ds$id)
mean(as.numeric(ds$id))
mean(ds$Participant
mean(ds$Participant)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
dsl  %>% group_by(id) %>% summarise(error = mean(error)) %>% get_summary_stats(error, type = "mean_sd")
View(dsl)
?hist
hist(dsl$error)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
dsl  %>% group_by(id) %>% summarise(error = mean(error))
dsl  %>% group_by(id) %>% summarise(error = mean(error), na.rm = T) %>% get_summary_stats(error, type = "mean_sd")
dsl  %>% group_by(id) %>% summarise(error = mean(error), na.rm = T)
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "mean_sd")
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T))
?get_summary_stats
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "mean_sd_min_max")
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "mean_sd_min_max")
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "mean_sd","min","max")
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = c("mean_sd","min","max"))
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, show = c("mean_sd","min","max"))
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
dsl  %>% t_test(error ~ phase, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
dsl %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% t_test(error ~ phase, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) %>% t_test(error ~ phase, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
dsl %>% group_by(phase,id) %>% summarise(phase = phase, error = mean(error, na.rm = T)) %>% t_test(error ~ phase, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T))
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) %>% t_test(error ~ phase, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
?t.test
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) %>% t_test(error ~ phase, paired = TRUE, var.equal = T, detailed = T, data = .) %>% add_significance()
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> ds_sum
ds_sum %>% t_test(error ~ phase, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
ds_sum$phase
ds_sum %>% t_test(ds_sum$error ~ ds_sum$phase, paired = TRUE, var.equal = T, detailed = T) %>% add_significance()
t.test(ds_sum$phase, ds_sum$error, paired = T)
t.test(x = ds_sum$phase, y = ds_sum$error, paired = T)
t.test(error ~ phase, data = ds_sum, paired = T)
load("/Users/johnfranchak/Dropbox/imu_classification/allppts_posture_750trees_win200_newsmooth_rmdisagree.RData")
library(randomForest)
library(randomForestExplainer)
min_depth_frame <- min_depth_distribution(models[[1]])
plot_min_depth_distribution(min_depth_frame,15)
library(tidyverse)
library(rstatix)
library(psych)
incl <- read_csv("summary_stats_LSS1.csv", na = "NaN")
incl <- filter(incl, id != 35) #Bad posttest eye tracking accuracy
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
incl <- read_csv("summary_stats_LSS2.csv", na = "NaN")
ds <- read_csv("LSS Calibration Data - LSS2 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
library(tidyverse)
library(rstatix)
library(psych)
incl <- read_csv("summary_stats_LSS2.csv", na = "NaN")
ds <- read_csv("LSS Calibration Data - LSS2 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
incl <- read_csv("summary_stats_mot_corrected.csv", na = "NaN")
ds <- read_csv("LSS Calibration Data - LSS2 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
t.test(error ~ phase, data = ds_sum, paired = T)
t.test(error ~ phase, data = ds_sum, paired = T, na.rm = T)
View(dsl)
incl <- read_csv("summary_stats_mot_corrected.csv", na = "NaN")
ds <- read_csv("LSS Calibration Data - LSS2 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
incl <- read_csv("summary_stats_mot_corrected.csv", na = "NaN")
incl <- filter(incl, id != 212 & id != 203)
ds <- read_csv("LSS Calibration Data - LSS2 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> %>% filter(id != 230) %>% ds_sum
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) %>% filter(id != 230) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% filter(id != 230) %>% get_summary_stats(error, type = "mean_sd")
library(tidyverse)
library(rstatix)
#LSS 1
incl <- read_csv("summary_stats_LSS1.csv", na = "NaN")
incl <- filter(incl, id != 35) #Bad posttest eye tracking accuracy
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
incl <- read_csv("summary_stats_LSS1.csv", na = "NaN")
incl <- filter(incl, id != 35) #Bad posttest eye tracking accuracy
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
?summarise
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common", .groups = "keep")
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common", groups = "keep")
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T), .groups = "keep") %>% get_summary_stats(error, type = "common")
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T), .groups = "drop_last") %>% get_summary_stats(error, type = "common")
incl <- read_csv("summary_stats_LSS1.csv", na = "NaN")
View(incl)
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T), .groups = "drop_last") %>% get_summary_stats(error, type = "common")
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
incl <- read_csv("summary_stats_LSS1.csv", na = "NaN")
incl <- filter(incl, id != 35) #Bad posttest eye tracking accuracy
ds <- read_csv("LSS Calibration Data - LSS1 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T), .groups = "drop_last") %>% get_summary_stats(error, type = "common")
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% get_summary_stats(error, type = "mean_sd")
incl <- read_csv("summary_stats_mot_corrected.csv", na = "NaN")
incl <- filter(incl, id != 212 & id != 203)
ds <- read_csv("LSS Calibration Data - LSS2 Final.csv", na = "NaN")
ds <- mutate(ds, id = factor(Participant))
#Remove participants who weren't in the analysis
ds <- filter(ds, id %in% incl$id)
#Wide to long
dsl <-  gather(ds, key = "check", value = "error", "error1","error2","error3","error4","error5","error1_pst","error2_pst","error3_pst","error4_pst","error5_pst")
dsl$phase <- factor(ifelse(is.na(str_extract(dsl$check,"pst")),"search","post"))
#Error summary stats by participant
dsl  %>% group_by(id) %>% summarise(error = mean(error, na.rm = T)) %>% get_summary_stats(error, type = "common")
#Check error by phase
dsl %>% group_by(phase,id) %>% summarise(error = mean(error, na.rm = T)) %>% filter(id != 230) -> ds_sum
t.test(error ~ phase, data = ds_sum, paired = T)
dsl  %>% group_by(phase) %>% filter(id != 230) %>% get_summary_stats(error, type = "mean_sd")
