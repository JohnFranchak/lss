xlab("") + ylab("Average vertical speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% split(.$dim) %>%
map(~ lmer(speed ~ eyehead*task + (1|id),data = .)) %>%
map(anova)
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = filter(dsl, dim == "x"), aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_crossbar(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), width = .2, position = position_dodge(.2)) +
xlab("") + ylab("Average horizontal speed (deg/s)") +
my_theme + theme(legend.position = "top")
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "y") %>%
summarise(Speed = mean(speed), n = n(), se = sd(speed)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot(data = .) +
geom_point(data = filter(dsl, dim == "y"), aes(y = speed, x = eyehead, color = task), position = position_dodge(.2)) +
geom_crossbar(aes(y = Speed, x = eyehead, color = task, ymin = ymin, ymax = ymax), width = .2, position = position_dodge(.2)) +
xlab("") + ylab("Average vertical speed (deg/s)") +
my_theme + theme(legend.position = "top")
library(multcomp)
library(lsmeans)
library(tidyverse)
library(effects)
library(lme4)
library(lmerTest)
library(rcompanion)
library(psych)
library(interactions)
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
my_theme <-   theme(text = element_text(size = 20),
axis.text.x = element_text(size = 20, color = "black"), axis.title.x = element_text(size = 24),
axis.text.y = element_text(size = 20,  color = "black"), axis.title.y = element_text(size = 24),
panel.background = element_blank(),panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "white"))
# CREATE DATA SET OVERALL---------------------------------------------------------------
ds <- read_csv("~/Dropbox/MATLAB/roi_iu/summary_stats_hlm.csv", na = "NaN")
ds$id <- ifelse(ds$id < 5000, ds$id, ds$id - floor(ds$id/100)*100)
ds$study <- factor(ifelse(ds$id > 4000, "cross", "long"))
ds = filter(ds, ds$study == "long") #FILTER OUT LONGITUDINAL
ds$id <- factor(ds$id)
ds$roi <-factor(ds$roi, levels = c("face","toy"))
ds$age <-as.numeric(ds$age)
ds$fixate[ds$fixate > 0] <- 1
ds$fix <-factor(ds$fixate, levels = c(0,1),labels = c("non-look","look"))
ds$held <-factor(ds$held, levels = c(0,1),labels = c("non-held","held"))
res_max <- lmer(cdist ~ roi*age*fixdur + (roi|id) + (1|exemplar), ds)
res_max <- lmer(cdist ~ roi*agemo*fixdur + (roi + fixdur|id) + (1|exemplar), ds)
res_max <- lmer(cdist ~ roi*agemo*fixdur + (roi+fixdur|id), ds)
res_max <- lmer(cdist ~ roi*agemo*fixdur + (roi|id) + (fixdur|id), ds)
?rescale
res_max <- lmer(cdist ~ roi*scale(agemo)*scale(fixdur) + (roi|id) + (fixdur|id), ds)
res_max <- lmer(cdist ~ roi*scale(agemo)*scale(fixdur) + (roi|id) + (1|exemplar), ds)
summary(res_max)
interact_plot(res_max, pred = agemo, modx = roi)
interact_plot(res_max, pred = scale(agemo), modx = roi)
interact_plot(res_max, pred = fixdur, modx = roi)
library(multcomp)
library(lsmeans)
library(tidyverse)
library(effects)
library(lme4)
library(lmerTest)
library(rcompanion)
library(psych)
library(interactions)
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
my_theme <-   theme(text = element_text(size = 20),
axis.text.x = element_text(size = 20, color = "black"), axis.title.x = element_text(size = 24),
axis.text.y = element_text(size = 20,  color = "black"), axis.title.y = element_text(size = 24),
panel.background = element_blank(),panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"),
legend.key = element_rect(fill = "white"))
# CREATE DATA SET OVERALL---------------------------------------------------------------
ds <- read_csv("~/Dropbox/MATLAB/roi_iu/summary_stats_hlm.csv", na = "NaN")
ds$id <- ifelse(ds$id < 5000, ds$id, ds$id - floor(ds$id/100)*100)
ds$study <- factor(ifelse(ds$id > 4000, "cross", "long"))
ds = filter(ds, ds$study == "long") #FILTER OUT LONGITUDINAL
ds$id <- factor(ds$id)
ds$roi <-factor(ds$roi, levels = c("face","toy"))
ds$age <-as.numeric(ds$age)
ds$fixate[ds$fixate > 0] <- 1
ds$fix <-factor(ds$fixate, levels = c(0,1),labels = c("non-look","look"))
ds$held <-factor(ds$held, levels = c(0,1),labels = c("non-held","held"))
ds$agemo <- scale(ds$agemo)
ds$fixdur <- scale(ds$fixdur)
ds %>% group_by(age, agemo, id, exemplar, fix, held) %>%
summarise(centering = mean(cdist)) -> dsa
View(dsa)
ds %>% group_by(age, agemo, id, exemplar, fix, held) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
View(dsa)
ds %>% group_by(age, agemo, id, roi, exemplar, fix, held) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res_max <- lmer(cdist ~ roi*age*fix + (roi|id) + (1|exemplar), dsa)
res_max <- lmer(centering ~ roi*age*fix + (roi|id) + (1|exemplar), dsa)
res_max <- lmer(centering ~ roi*age*fix + (1|id) + (1|exemplar), dsa)
res_max <- lmer(centering ~ roi*age*fix + (1|id) + (1|exemplar), dsa)
res_max <- lmer(centering ~ roi*age*fix + (1|id), dsa)
summary(res_max)
res <- lmer(centering ~ roi*age*fix + (age|id), dsa)
anova(res)
summary(res)
res <- lmer(centering ~ roi*factor(age)*fix + (age|id), dsa)
anova(res)
summary(res)
res <- lmer(centering ~ roi*age*fix + (age|id), dsa)
anova(res)
interact_plot(res, pred = age, modx = roi)
res <- lmer(centering ~ roi*age*fix + (age|id) + (1|exemplar), dsa)
res <- lmer(centering ~ exemplar*age*fix + (age|id), dsa)
anova(res)
summary(res)
interact_plot(res, pred = age, modx = roi)
interact_plot(res, pred = age, modx = exemplar)
ds %>% group_by(age, roi, fix) %>%
summarise(centering = mean(cdist), n = n(), se = sd(cdist)/sqrt(n), ymin = centering - se, ymax = centering + se) %>%
ggplot(aes(y = centering, x = as.numeric(age), color = roi, lintetype = fix, ymin = ymin, ymax = ymax, group = interaction(fix, roi))) +
geom_line(size = 1.5, aes(linetype = fix), position = position_dodge(.2)) +
geom_pointrange(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
################
ds %>% split(.$roi) %>%
map(~ lmer(cdist ~ as.numeric(age)*fix + (1|id), .)) %>%
map(anova)
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, lintetype = fix, group = interaction(exemplar, roi))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
################
ds %>% split(.$roi) %>%
map(~ lmer(cdist ~ as.numeric(age)*fix + (1|id), .)) %>%
map(anova)
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, lintetype = fix, group = interaction(exemplar, roi))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
################
ds %>% split(.$roi) %>%
map(~ lmer(cdist ~ as.numeric(age)*fix + (1|id), .)) %>%
map(anova)
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, lintetype = fix, group = interaction(exemplar, roi))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix))
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, lintetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix))
ds %>% group_by(age, agemo, id, roi, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res <- lmer(centering ~ exemplar*age*fix + (age|id), dsa)
ds %>% group_by(age, agemo, id, roi, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res <- lmer(centering ~ exemplar*age*fix + (age|id), dsa)
res <- lmer(centering ~ exemplar*age*fix + (1|id), dsa)
anova(res)
interact_plot(res, pred = age, modx = exemplar)
ds %>% group_by(age, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> ds_sum
View(ds_sum)
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, lintetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
geom_line(aes(y = centering, x = age, color = exemplar, lintetype = fix, group = interaction(exemplar, fix), data = ds_sum)
################
ds %>% split(.$roi) %>%
map(~ lmer(cdist ~ as.numeric(age)*fix + (1|id), .)) %>%
map(anova)
by(ds, ds$roi, function(x) anova(lmer(cdist ~ as.numeric(age)*fix + (1|id), data = x)))
ds %>% split(.$fix) %>%
map(~ lmer(cdist ~ age*roi + (1|id), .)) %>%
map(anova)
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, lintetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
geom_line(aes(y = centering, x = age, color = exemplar, lintetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
summary(res)
res <- lmer(centering ~ exemplar*age + fix + (1|id), dsa)
anova(res)
summary(res)
interact_plot(res, pred = age, modx = exemplar)
res <- lmer(centering ~ exemplar*age + fix + (exemplar|id), dsa)
res <- lmer(centering ~ exemplar*age + fix + (age|id), dsa)
res <- lmer(centering ~ exemplar*age + fix + (1|id) + (1|exemplar), dsa)
res <- lmer(centering ~ exemplar*age + fix + (1|id) + (1|exemplar), dsa)
res_max <- lmer(cdist ~ roi*agemo*fixdur + frame + (1|id), ds)
anova(res_max)
summary(res_max)
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
ds %>% group_by(age, agemo, id, roi, exemplar, fix, held) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res <- lmer(centering ~ exemplar*age*held + fix + (1|id), dsa)
anova(res)
summary(res)
cat_plot(res, pred = exemplar, modx = held, mod2 = fix)
ds %>% filter(exemplar !- "NA") %>% group_by(age, agemo, id, roi, exemplar, fix, held) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
ds %>% filter(exemplar !- "NA") %>% group_by(age, agemo, id, roi, exemplar, fix, held) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
ds %>% filter(exemplar != "NA") %>% group_by(age, agemo, id, roi, exemplar, fix, held) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res <- lmer(centering ~ exemplar*age*held + fix + (1|id), dsa)
anova(res)
res <- lmer(centering ~ exemplar*age*held*fix + (1|id), dsa)
anova(res)
cat_plot(res, pred = exemplar, modx = held, mod2 = fix)
summary(res)
res <- lmer(centering ~ exemplar+age+held+fix + (1|id), dsa)
anova(res)
interact_plot(res, pred = age, modx = exemplar)
summary(res)
cat_plot(res, pred = exemplar, modx = held, mod2 = fix)
ds %>% filter(held == "non-held") %>% group_by(age, agemo, id, roi, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res <- lmer(centering ~ exemplar*age*fix + (1|id), dsa)
anova(res)
interact_plot(res, pred = age, modx = exemplar)
ds %>% group_by(age, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> ds_sum
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "lm")
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "lm", se = F)
library(RColorBrewer)
brewer.pal(3, "Reds")
display.brewer.pal(3, "Reds")
display.brewer.pal(3, "Greens")
brewer.pal(1, "Reds")
brewer.pal("Reds")
exemplar_colors = c("#999999",brewer.pal(3, "Greens"))
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "lm", se = F) +
scale_color_manual(breaks = c("NA","1","2","3"), values = exemplar_colors)
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "lm", se = F) +
scale_color_manual(breaks = c("NA","1","2","3"), values = exemplar_colors) + my_theme
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "loess", se = F) +
scale_color_manual(breaks = c("NA","1","2","3"), values = exemplar_colors) + my_theme
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "loess", se = T) +
scale_color_manual(breaks = c("NA","1","2","3"), values = exemplar_colors) + my_theme
?geom_smooth
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "loess", se = F) +
scale_color_manual(breaks = c("NA","1","2","3"), values = exemplar_colors) + my_theme
exemplar_colors = c("#E69F00",brewer.pal(3, "Greens"))
ds %>% group_by(age, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> ds_sum
ds$exemplar <-factor(ds$exemplar, levels = c("NA","1","2","3"),labels = c("Face","Toy 1","Toy2","Toy 3"))
ds %>% filter(held == "non-held") %>% group_by(age, agemo, id, roi, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res <- lmer(centering ~ exemplar*age*fix + (1|id), dsa)
anova(res)
summary(res)
interact_plot(res, pred = age, modx = exemplar)
exemplar_colors = c("#E69F00",brewer.pal(3, "Greens"))
ds %>% group_by(age, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> ds_sum
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "loess", se = F) +
scale_color_manual(breaks = c("Face","Toy 1","Toy 2","Toy 3"), values = exemplar_colors) + my_theme
ds$exemplar <-factor(ds$exemplar, levels = c("NA","1","2","3"),labels = c("Face","Toy 1","Toy 2","Toy 3"))
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "loess", se = F) +
scale_color_manual(breaks = c("Face","Toy 1","Toy 2","Toy 3"), values = exemplar_colors) + my_theme
ds %>% filter(held == "non-held") %>% group_by(age, agemo, id, roi, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res <- lmer(centering ~ exemplar*age*fix + (1|id), dsa)
anova(res)
summary(res)
interact_plot(res, pred = age, modx = exemplar)
exemplar_colors = c("#E69F00",brewer.pal(3, "Greens"))
ds %>% group_by(age, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> ds_sum
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "loess", se = F) +
scale_color_manual(breaks = c("Face","Toy 1","Toy 2","Toy 3"), values = exemplar_colors) + my_theme
ds$exemplar <-factor(ds$exemplar, levels = c("NA","1","2","3"),labels = c("Face","Toy 1","Toy 2","Toy 3"))
ds %>% filter(held == "non-held") %>% group_by(age, agemo, id, roi, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res <- lmer(centering ~ exemplar*age*fix + (1|id), dsa)
anova(res)
summary(res)
interact_plot(res, pred = age, modx = exemplar)
DATA SET OVERALL---------------------------------------------------------------
ds <- read_csv("~/Dropbox/MATLAB/roi_iu/summary_stats_hlm.csv", na = "NaN")
ds$id <- ifelse(ds$id < 5000, ds$id, ds$id - floor(ds$id/100)*100)
ds$study <- factor(ifelse(ds$id > 4000, "cross", "long"))
ds = filter(ds, ds$study == "long") #FILTER OUT LONGITUDINAL
ds$id <- factor(ds$id)
ds$roi <-factor(ds$roi, levels = c("face","toy"))
ds$age <-as.numeric(ds$age)
ds$fixate[ds$fixate > 0] <- 1
ds$fix <-factor(ds$fixate, levels = c(0,1),labels = c("non-look","look"))
ds$held <-factor(ds$held, levels = c(0,1),labels = c("non-held","held"))
ds$exemplar <-factor(ds$exemplar, levels = c("NA","1","2","3"),labels = c("Face","Toy 1","Toy 2","Toy 3"))
ds$agemo <- scale(ds$agemo)
ds$fixdur <- scale(ds$fixdur)
#FACE VS TOY EXCLUDING HOLDING
ds %>% filter(held == "non-held") %>% group_by(age, agemo, id, roi, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> dsa
res <- lmer(centering ~ exemplar*age*fix + (1|id), dsa)
anova(res)
summary(res)
interact_plot(res, pred = age, modx = exemplar)
exemplar_colors = c("#E69F00",brewer.pal(3, "Greens"))
ds %>% group_by(age, exemplar, fix) %>%
summarise(centering = mean(cdist, na.rm = T)) -> ds_sum
ggplot(data = dsa, aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix))) +
geom_point(size = 1.5, position = position_dodge(.2), aes(shape = fix)) +
#geom_line(aes(y = centering, x = age, color = exemplar, linetype = fix, group = interaction(exemplar, fix)), data = ds_sum)
geom_smooth(method = "loess", se = F) +
scale_color_manual(breaks = c("Face","Toy 1","Toy 2","Toy 3"), values = exemplar_colors) + my_theme
library(multcomp)
library(emmeans)
library(tidyverse)
library(effects)
library(lme4)
library(lmerTest)
library(gridExtra)
library(rcompanion)
library(psych)
library(ggforce)
library(interactions)
setwd("~/Documents/Github/lss")
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
theme_update(text = element_text(size = 18),
axis.text.x = element_text(size = 18, color = "black"), axis.title.x = element_text(size = 21, margin = margin(t = 0, r = 0, b = 10, l = 0)),
axis.text.y = element_text(size = 18,  color = "black"), axis.title.y = element_text(size = 21, margin = margin(t = 0, r = 10, b = 0, l = 0)),
panel.background = element_blank(),panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "white"),
axis.ticks.length = unit(.25, "cm"), axis.ticks = element_line(size = 1, lineend = "round"),
legend.key = element_rect(fill = "white"))
# CREATE DATA SET ---------------------------------------------------------------
ds <- read_csv("summary_stats_peaks.csv", na = "NaN")
ds <- filter(ds, ds$opp == 0)
ds <- mutate(ds, id = factor(id))
ds$task <- factor(ds$cond, levels = c("Walk","Search"))
ds$bin[ds$bin > 7] <- 7
#ds$bin <- factor(ds$bin, levels = c(0,1,2,3,4,5,6,7,8,9,10,11), labels = c("0-10","10-20","20-30","30-40","40-50","50-60","60-70","70-80","80-90","90-100","100-110","110+"))
ds$bin <- factor(ds$bin, levels = c(0,1,2,3,4,5,6,7), labels = c("10","20","30","40","50","60","70","80+"))
ds$eye_prop <- abs(ds$eye_prop)
ds$head_prop <- abs(ds$head_prop)
ds$eye <- abs(ds$eye)
ds$head <- abs(ds$head)
View(ds)
pkgs <- c("multcomp", "emmeans", "tidyverse", "effects", "lme4", "lmerTest", "psych","ggforce","patchwork", "rstatix")
#lapply(pkgs[!(pkgs %in% installed.packages())], install.packages)
lapply(pkgs, library, character.only = TRUE)
cor.test(ds$walk_path_speed, ds$search_path_speed)
ds %>% gather(key = "task", value = "speed", "walk_path_speed", "search_path_speed") %>%
mutate(task = factor(task, levels = c("walk_path_speed", "search_path_speed"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
ds %>% gather(key = "task", value = "speed", "walk_path_speed", "search_path_speed") %>%
mutate(task = factor(task, levels = c("walk_path_speed", "search_path_speed"), labels = c("Walk", "Search"))) -> dsl
ds <- read_csv("summary_stats_mot_corrected.csv", na = "NaN")
ds <- mutate(ds, id = factor(id))
ds <- filter(ds, id != 212 & id != 203)
ds[ds["id"] == 229, "walk_posy_speed"] <- NA
ds <- filter(ds, id != 212 & id != 203)
ds[ds["id"] == 229, "walk_posy_speed"] <- NA
ds[ds["id"] == 229, "walk_posy_speed"] <- NA
ds %>% gather(key = "task", value = "speed", "walk_path_speed", "search_path_speed") %>%
mutate(task = factor(task, levels = c("walk_path_speed", "search_path_speed"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
ds %>% gather(key = "task", value = "speed", "walk_path_speed_sd", "search_path_speed_sd") %>%
mutate(task = factor(task, levels = c("walk_path_speed_sd", "search_path_speed_sd"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
ds %>% gather(key = "task", value = "speed", "walk_straightness", "search_straightness") %>%
mutate(task = factor(task, levels = c("walk_straightness", "search_straightness"), labels = c("Walk", "Search"))) -> dsl
dsl %>% group_by(task) %>% get_summary_stats(speed, type = "mean_sd")
dsl %>% t_test(speed ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(speed ~ task, paired = TRUE)
dsl <-  gather(ds, key = "cond", value = "std", "walk_gazex_std","walk_gazey_std","search_gazex_std","search_gazey_std")
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"),levels = c("walk","search"),labels = c("Walk","Search"))
dsl %>% group_by(task) %>% get_summary_stats(std, type = "mean_sd")
dsl %>% t_test(std ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(std ~ task, paired = TRUE)
dsl <-  gather(ds, key = "cond", value = "std", "walk_gazex_std","walk_gazey_std","search_gazex_std","search_gazey_std")
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl <- filter(dsl, dsl$dim == "x")
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"),levels = c("walk","search"),labels = c("Walk","Search"))
dsl %>% group_by(task) %>% get_summary_stats(std, type = "mean_sd")
dsl %>% t_test(std ~ task, paired = TRUE) %>% add_significance()
dsl %>% cohens_d(std ~ task, paired = TRUE)
dsl <-  gather(ds, key = "cond", value = "std", "walk_posx_std","search_posx_std","walk_posy_std","search_posy_std","walk_eyex_std","search_eyex_std","walk_eyey_std","search_eyey_std")
dsl$eyehead <- factor(ifelse(is.na(str_extract(dsl$cond,"eye")),"head","eye"), levels = c("eye","head"),labels = c("Eyes","Head"))
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"), levels = c("walk","search"),labels = c("Walk","Search"))
dsl %>% split(.$dim) %>%
map(~ lmer(std ~ eyehead*task + (1|id),data = .)) -> res
res %>% map(anova)
res %>% map(summary)
res %>% map(anova)
res %>% map(~ emmeans(.,pairwise~eyehead|task, adjust = "Holm"))
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(stdev = mean(std, na.rm = T), n = n(), se = sd(std, na.rm = T)/sqrt(n), ymin = stdev - se, ymax = stdev + se)
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(stdev = mean(std, na.rm = T), n = n(), stdev = sd(std, na.rm = T), se = sd(std, na.rm = T)/sqrt(n), ymin = stdev - se, ymax = stdev + se) %>%
print
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(stdev = mean(std, na.rm = T), n = n(), stdev = sd(std, na.rm = T), se = sd(std, na.rm = T)/sqrt(n))
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(stdev = mean(std, na.rm = T), n = n(), std_of_mean = sd(std, na.rm = T), se = sd(std, na.rm = T)/sqrt(n))
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(spread = mean(std, na.rm = T), n = n(), SD = sd(std, na.rm = T))
res %>% map(~ emmeans(.,pairwise~task|eyehead, adjust = "Holm"))
dsl <-  gather(ds, key = "cond", value = "speed", "walk_posx_speed","search_posx_speed","walk_posy_speed","search_posy_speed","walk_eyex_speed","search_eyex_speed","walk_eyey_speed","search_eyey_speed")
dsl$eyehead <- factor(ifelse(is.na(str_extract(dsl$cond,"eye")),"head","eye"), levels = c("eye","head"),labels = c("Eyes","Head"))
dsl$dim <- factor(ifelse(is.na(str_extract(dsl$cond,"x")),"y","x"))
dsl$task <- factor(ifelse(is.na(str_extract(dsl$cond,"walk")),"search","walk"),levels = c("walk","search"),labels = c("Walk","Search"))
dsl %>% split(.$dim) %>%
map(~ lmer(speed ~ eyehead*task + (1|id),data = .)) -> res
res %>% map(anova)
res %>% map(~ emmeans(.,pairwise~eyehead|task, adjust = "Holm"))
res %>% map(~ emmeans(.,pairwise~task|eyehead, adjust = "Holm"))
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), STD = sd(speed, na.rm = T))
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), se = sd(speed, na.rm = T)/sqrt(n), ymin = Speed - se, ymax = Speed + se) %>%
ggplot() +
labs(x = "", y = "Speed (º/s)") +
geom_sina(data = filter(dsl, dim == "x"), aes(y = speed, x = eyehead, color = task), maxwidth = .5, position = position_dodge(.6), alpha = .5, size = 3) +
geom_errorbar(aes(x = eyehead, group = task,ymin = ymin, ymax = ymax), size =1, width = .3, position = position_dodge(.6)) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") +
scale_y_continuous(breaks = 0:5, limits = c(0,5))
res %>% map(~ emmeans(.,pairwise~eyehead|task, adjust = "Holm"))
res %>% map(~ emmeans(.,pairwise~task|eyehead, adjust = "Holm"))
dsl %>% group_by(dim, eyehead, task) %>% filter(dim == "x") %>%
summarise(Speed = mean(speed, na.rm = T), n = n(), STD = sd(speed, na.rm = T))
library(multcomp)
library(emmeans)
library(tidyverse)
library(effects)
library(lme4)
library(lmerTest)
library(gridExtra)
library(rcompanion)
library(psych)
library(ggforce)
library(interactions)
setwd("~/Documents/Github/lss")
cbp1 <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7")
theme_update(text = element_text(size = 18),
axis.text.x = element_text(size = 18, color = "black"), axis.title.x = element_text(size = 21, margin = margin(t = 0, r = 0, b = 10, l = 0)),
axis.text.y = element_text(size = 18,  color = "black"), axis.title.y = element_text(size = 21, margin = margin(t = 0, r = 10, b = 0, l = 0)),
panel.background = element_blank(),panel.border = element_blank(), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "white"),
axis.ticks.length = unit(.25, "cm"), axis.ticks = element_line(size = 1, lineend = "round"),
legend.key = element_rect(fill = "white"))
# CREATE DATA SET ---------------------------------------------------------------
ds <- read_csv("summary_stats_peaks.csv", na = "NaN")
ds <- filter(ds, ds$opp == 0)
ds <- mutate(ds, id = factor(id))
ds$task <- factor(ds$cond, levels = c("Walk","Search"))
ds$bin[ds$bin > 7] <- 7
#ds$bin <- factor(ds$bin, levels = c(0,1,2,3,4,5,6,7,8,9,10,11), labels = c("0-10","10-20","20-30","30-40","40-50","50-60","60-70","70-80","80-90","90-100","100-110","110+"))
ds$bin <- factor(ds$bin, levels = c(0,1,2,3,4,5,6,7), labels = c("10","20","30","40","50","60","70","80+"))
ds$eye_prop <- abs(ds$eye_prop)
ds$head_prop <- abs(ds$head_prop)
ds$eye <- abs(ds$eye)
ds$head <- abs(ds$head)
# Head contribution --------------
#AVERAGING BY SAMPLE, USING SHIFT BINS
ds %>% group_by(task,id, bin) %>%
summarise(head_prop = mean(head_prop), na.rm = T) %>%
lmer(head_prop ~ bin*task + (1|id), data = .) -> res
summary(res)
anova(res)
emmeans(res, pairwise~task|bin,adjust = "Holm")
contrast(emmeans(res, ~bin|task), "consec",adjust = "Holm")
contrast(emmeans(res, ~bin|task), "poly")
ds %>% group_by(task, bin) %>%
summarise(eye = mean(abs(eye_prop), na.rm = T), n = n(), se_eye = sd(abs(eye_prop), na.rm = T)/sqrt(n), ymin_eye = eye - se_eye, ymax_eye = eye + se_eye, head = mean(abs(head_prop), na.rm = T), se_head = sd(abs(head_prop), na.rm = T)/sqrt(n), ymin_head = head - se_head, ymax_head = head + se_head) %>%
ggplot(aes(x = bin, color = task, y = head, ymin = ymin_head, ymax = ymax_head)) +
labs(x = "Total gaze shift (º)", y = "Head contribution (prop.)") + #facet_wrap(~ task) +
#geom_pointrange(aes(x = bin, color = task, y = eye, ymin = ymin_eye, ymax = ymax_eye), size =1, position = position_dodge(.6)) +
geom_pointrange(size =1.25, shape = 22, fill = NA, na.rm = T) +
scale_color_manual(values = cbp1[c(7,6)], name = "Task") + #geom_smooth(method = "loess", na.rm = T) +
theme(legend.position = "bottom") +
ylim(c(.3,.7))
anova(res)
